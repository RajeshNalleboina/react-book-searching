{"version":3,"sources":["BooksAPI.js","components/BookShelf.js","components/BookSearch.js","components/ListBook.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","BookShelf","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","book","console","log","JSON","stringify","target","value","setState","changeShelves","state","bind","assertThisInitialized","category","_this2","react_default","a","createElement","className","map","key","id","style","width","height","backgroundImage","imageLinks","thumbnail","shelf","onChange","e","disabled","title","authors","Component","Search","updateQuery","query","clearQuery","method","objectSpread","Content-Type","body","undefined","Array","isArray","filter","hasOwnProperty","callback","_this3","react_router_dom","to","type","placeholder","components_BookShelf","searchForBooks","Shelves","currentlyReadingBooks","wantToReadBooks","readBooks","App","BooksAPI","shelve","_this4","react_router","exact","path","render","ListBook","BookSearch","React","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8c93d6be.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass BookShelf extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        changeShelves: PropTypes.func.isRequired,\n    }\n    handleChange = (event, book) => {\n        console.log(\"****\" + JSON.stringify(book));\n        console.log(\"Event: \" + event.target.value);\n        this.setState({ value: event.target.value });\n        this.props.changeShelves(book, event.target.value);\n    }\n    componentDidMount() {\n        this.setState({\n            value: this.props.category,\n        })\n    }\n    render() {\n        // const changeShelves = this.props.changeShelves;\n        //if (Array.isArray(this.props.books) && this.props.books.length) {\n        return (\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                    {this.props.books.map(book =>\n                        <li key={book.id}>\n                            <div className=\"book\">\n                                <div className=\"book-top\">\n                                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${book.imageLinks.thumbnail}\")` }}></div>\n                                    <div className=\"book-shelf-changer\">\n                                        {console.log(\"shelf: \" + book.shelf)}\n                                        <select value={book.shelf || 'none'} onChange={(e) => this.handleChange(e, book)}>\n                                            <option value=\"move\" disabled>Move to...</option>\n                                            <option value=\"currentlyReading\" >Currently Reading</option>\n                                            <option value=\"wantToRead\" >Want to Read</option>\n                                            <option value=\"read\" >Read</option>\n                                            <option value=\"none\">None</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"book-title\">{book.title}</div>\n                                <div className=\"book-authors\">{book.authors}</div>\n                            </div>\n                        </li>\n                    )}\n                </ol>\n            </div>\n        )\n        // }\n        // else return (<div></div>)\n    }\n}\nexport default BookShelf;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from '../BooksAPI'\nimport BookShelf from '../components/BookShelf';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: '',\n            books: []\n        }\n    }\n    updateQuery = (query) => {\n        this.setState(() => ({\n            query: query\n        }))\n    }\n    clearQuery = () => {\n        this.updateQuery('')\n    }\n    componentDidUpdate() {\n        if (this.setState.query !== '') {\n            BooksAPI.search(this.state.query)\n                .then((data) => {\n                    console.log(data)\n                    if (data !== undefined) {\n                        if (Array.isArray(data)) {\n                            this.setState(() => ({\n                                books: data.filter(book => book.hasOwnProperty('imageLinks'))\n                                    .filter(book => book.hasOwnProperty('authors'))\n                            }))\n                        } else {\n                            this.setState(() => ({\n                                query: '',\n                                books: []\n                            }))\n                        }\n                    } else {\n                        this.setState(() => ({\n                            books: []\n                        }))\n                    }\n                })\n        }\n    }\n    componentWillUnmount() {\n        this.setState = (state, callback) => {\n            return;\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className='close-search' to='/'>Close </Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input type=\"text\" placeholder=\"Search by title or author\"\n                            value={this.state.query}\n                            onChange={(event) => this.updateQuery(event.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <BookShelf category='none' books={this.state.books} changeShelves={this.props.searchForBooks} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport BookShelf from '../components/BookShelf'\n\nfunction Shelves(props) {\n\n    const currentlyReadingBooks = props.books.filter(book =>\n        book.shelf === \"currentlyReading\")\n    const wantToReadBooks = props.books.filter(book =>\n        book.shelf === \"wantToRead\")\n    const readBooks = props.books.filter(book =>\n        book.shelf === \"read\")\n\n    return (<div className=\"list-books\">\n        <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n            <div>\n                <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                    <BookShelf category='currentlyReading' books={currentlyReadingBooks} changeShelves={props.searchForBooks} />\n                </div>\n                <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Want to Read</h2>\n                    <BookShelf category='wantToRead' books={wantToReadBooks} changeShelves={props.searchForBooks} />\n                </div>\n                <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Read</h2>\n                    <BookShelf category='read' books={readBooks} changeShelves={props.searchForBooks} />\n                </div>\n            </div>\n        </div>\n\n        <Link to='/search' className=\"open-search-link\">Add a book</Link>\n\n    </div>)\n}\nexport default Shelves;","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Search from './components/BookSearch'\nimport Shelves from './components/ListBook'\nimport { Route } from 'react-router-dom'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      books: []\n    }\n    this.changeShelves = this.changeShelves.bind(this)\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books\n        }))\n      })\n  }\n\n  changeShelves(book, shelve) {\n    BooksAPI.update(book, shelve)\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books\n        }))\n      })\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path='/' render={() => (\n          <Shelves books={this.state.books} searchForBooks={this.changeShelves} />\n        )} />\n        <Route path='/search' render={() => (\n          <Search searchForBooks={this.changeShelves} />\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}